{"version":3,"file":"main.abf5dd0a312daa03d335.hot-update.js","sources":["webpack:///./src/components/partials/CalendarDate.jsx"],"sourcesContent":["import { useAtom } from 'jotai';\r\nimport moment from 'moment';\r\nimport React, { useState } from 'react';\r\n\r\nimport { dateObjectAtom, globalClassAtom, primaryColorAtom, selectedDateAtom } from '../Calendar.jsx';\r\nimport { currentStatus } from '../utils/currentCalendarStatus.js';\r\n\r\nconst CalendarDate = () => {\r\n  const [dateObject, setDateObject] = useAtom(dateObjectAtom);\r\n  const [selectedDate, setSelectedDate] = useAtom(selectedDateAtom);\r\n  const [glClass, setGlClass] = useAtom(globalClassAtom)\r\n\r\n  const [primary, setPrimary] = useAtom(primaryColorAtom)\r\n\r\n  const weekdayshort = moment.weekdaysShort();\r\n\r\n  // First day of month\r\n  const firstDayOfMonth = () => {\r\n    let firstDay = moment(selectedDate).startOf('month').format('d');\r\n\r\n    return Number(firstDay);\r\n  };\r\n\r\n  // change date\r\n  const setDate = (date) => {\r\n    let dateObj = Object.assign({}, selectedDate);\r\n    dateObj = moment(selectedDate).set('date', date);\r\n\r\n    setSelectedDate(dateObj);\r\n    setDateObject(dateObj);\r\n  };\r\n\r\n  // empty days\r\n  let blanks = [];\r\n  for (let i = 0; i < firstDayOfMonth(); i++) {\r\n    const rand = Math.floor(Math.random() * Math.floor(1000000000));\r\n    blanks.push(\r\n      <td className=\"empty\" key={rand}>\r\n        {''}\r\n      </td>\r\n    );\r\n  }\r\n\r\n  // days of month\r\n  const daysInMonth = () => {\r\n    return dateObject.daysInMonth();\r\n  };\r\n\r\n  let daysMonth = [];\r\n  for (let d = 1; d <= daysInMonth(); d++) {\r\n    const rand = Math.floor(Math.random() * Math.floor(1000000000));\r\n    let is_current_day = currentStatus(d, 'date', dateObject, selectedDate)\r\n      ? 'text-white'\r\n      : 'hover:bg-slate-200';\r\n\r\n    daysMonth.push(\r\n      <td key={d + rand}>\r\n        <span\r\n          className={`cursor-pointer py-[10px] w-[30px] block mx-auto text-center px-[6px] rounded-[8px] font-[400] uppercase text-[16px] leading-[22px] transition-all ${is_current_day}`}\r\n          onClick={() => setDate(d)}\r\n          style={currentStatus(d, 'date', dateObject, selectedDate) ? {backgroundColor: primary} : {}}\r\n        >\r\n          {d}\r\n        </span>\r\n      </td>\r\n    );\r\n  }\r\n\r\n  var totalSlots = [...blanks, ...daysMonth];\r\n  let rows = [];\r\n  let cells = [];\r\n\r\n  // total slots\r\n  totalSlots.forEach((row, i) => {\r\n    if (i % 7 !== 0) {\r\n      cells.push(row);\r\n    } else {\r\n      rows.push(cells);\r\n      cells = [];\r\n      cells.push(row);\r\n    }\r\n    if (i === totalSlots.length - 1) {\r\n      rows.push(cells);\r\n    }\r\n  });\r\n\r\n  // Short name of week\r\n  let _rendarShortName = (day, i) => {\r\n    const rand = Math.floor(Math.random() * Math.floor(1000000000));\r\n    return (\r\n      <th\r\n        key={i + rand}\r\n        className=\"text-center font-[500] uppercase text-[16px] leading-[22px]\"\r\n      >\r\n        {day}\r\n      </th>\r\n    );\r\n  };\r\n\r\n  let _rendarDays = (d, i) => {\r\n    const rand = Math.floor(Math.random() * Math.floor(1000000000));\r\n    return <tr key={i + rand}>{d}</tr>;\r\n  };\r\n\r\n  return (\r\n    <div className={`${glClass && glClass+'-date'} h-full`} >\r\n      <table className={`${glClass && glClass+'-date_table'} w-full h-full calendar-day`} >\r\n        <thead>\r\n          <tr>{weekdayshort.map(_rendarShortName)}</tr>\r\n        </thead>\r\n\r\n        <tbody>{rows.map(_rendarDays)}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarDate;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1CA;AA2CA;AACA;AAIA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AADA;AAjDA;AACA;AAyCA;AAAA;AAiBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAFA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AADA;AAIA;AAAA;AALA;AADA;AAUA;AACA;AA7GA;;;;;;AA8GA;AACA;;;;;;;;;;;A","sourceRoot":""}