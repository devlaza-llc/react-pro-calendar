{"version":3,"file":"main.67f7f090bad4e6f05690.hot-update.js","sources":["webpack:///./src/components/partials/CalendarYear.jsx"],"sourcesContent":["import moment from 'moment';\r\nimport React from 'react'\r\nimport { useAtom } from 'jotai';\r\n\r\nimport { dateObjectAtom, monthTableAtom, yearNavAtom, selectedDateAtom, yearsAtom, globalClassAtom, primaryColorAtom } from '../Calendar.jsx';\r\nimport { currentStatus } from '../utils/currentCalendarStatus.js';\r\n\r\nconst CalendarYear = () => {\r\n    const [dateObject, setDateObject] = useAtom(dateObjectAtom)\r\n    const [selectedDate, setSelectedDate] = useAtom(selectedDateAtom)\r\n    const [showMonthTable, setShowMonthTable] = useAtom(monthTableAtom)\r\n    const [showYearNav, setShowYearNav] = useAtom(yearNavAtom)\r\n    const [years, setYears] = useAtom(yearsAtom)\r\n    const [glClass, setGlClass] = useAtom(globalClassAtom)\r\n\r\n    const [primary, setPrimary] = useAtom(primaryColorAtom)\r\n\r\n    const setYear = (year) => {\r\n        let dateObj = Object.assign({}, selectedDate);\r\n        dateObj = moment(selectedDate).set(\"year\", year);\r\n\r\n        setSelectedDate(dateObj)\r\n        setShowMonthTable(!showMonthTable)\r\n        setShowYearNav(!showYearNav)\r\n    };\r\n\r\n    const YearTable = () => {\r\n        let months = [];\r\n        let tenyear = years.slice(0, 12)\r\n\r\n        tenyear.map(data => {\r\n            const is_current_month = currentStatus(data, \"year\", dateObject, selectedDate) ? \"bg-[#FF0032] hover:bg-[#FF0032] text-white\" : \"hover:bg-slate-200\"\r\n\r\n            months.push(\r\n                <td\r\n                    key={data}\r\n                    className={`text-center font-[400] capitalize text-[16px] leading-[22px] px-[7px] py-[13px] rounded-[8px] cursor-pointer transition-all ${is_current_month}`}\r\n                    onClick={() => setYear(data)}\r\n                    style={currentStatus(data, \"year\", dateObject, selectedDate) ? {backgroundColor: primary} : {}}\r\n                >\r\n                    <span>{data}</span>\r\n                </td>\r\n            );\r\n        });\r\n\r\n        let rows = [];\r\n        let cells = [];\r\n\r\n        months.forEach((row, i) => {\r\n            if (i % 3 !== 0 || i == 0) {\r\n                cells.push(row);\r\n            } else {\r\n                rows.push(cells);\r\n                cells = [];\r\n                cells.push(row);\r\n            }\r\n        });\r\n\r\n        rows.push(cells);\r\n\r\n        let yearlist = rows.map((d, i) => {\r\n            return <tr key={i} >{d}</tr>;\r\n        });\r\n\r\n        return (\r\n            <table className={`${glClass && glClass+'-year_table'} w-full h-full`} >\r\n                <tbody>{yearlist}</tbody>\r\n            </table>\r\n        );\r\n    };\r\n\r\n    return (\r\n      <div className={`${glClass && glClass+'-year'}`} >\r\n        <YearTable />\r\n      </div>  \r\n    )\r\n}\r\n\r\nexport default CalendarYear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AAMA;AAAA;AANA;AASA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AADA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AAtEA;;;;;;AAuEA;AACA;;;;;;;;;;;A","sourceRoot":""}