{"version":3,"file":"main.a9f5e22d0e099a3e7ae5.hot-update.js","sources":["webpack:///./src/components/Calendar.jsx"],"sourcesContent":["import { atom, useAtom } from 'jotai'\r\nimport moment from 'moment'\r\nimport React, { useEffect } from 'react'\r\nimport './calendar.css'\r\n\r\nimport CalendarDate from './partials/CalendarDate'\r\nimport CalendarHeader from './partials/CalendarHeader'\r\nimport CalendarMonth from './partials/CalendarMonth'\r\nimport CalendarYear from './partials/CalendarYear'\r\n\r\nexport const yearNavAtom = atom(false)\r\nexport const dateObjectAtom = atom(moment())\r\nexport const monthTableAtom = atom(false)\r\nexport const selectedDateAtom = atom(moment())\r\nexport const calendarTableAtom = atom(true)\r\nexport const yearsAtom = atom(Array.from({ length: 12 }, (v, i) => moment().year() + 12 - i - 1).reverse())\r\nexport const globalClassAtom = atom('')\r\nexport const primaryColorAtom = atom('')\r\n\r\nconst Calendar = ({\r\n    change = null,\r\n    onChange = null,\r\n    reset,\r\n    setReset,\r\n    parentClass = false,\r\n    globalClass = false,\r\n    primaryColor = '#C10206'\r\n}) => {\r\n    const [dateObject, setDateObject] = useAtom(dateObjectAtom)\r\n    const [selectedDate, setSelectedDate] = useAtom(selectedDateAtom)\r\n    const [showMonthTable, setShowMonthTable] = useAtom(monthTableAtom)\r\n    const [showCalendarTable, setShowCalendarTable] = useAtom(calendarTableAtom)\r\n    const [glClass, setGlClass] = useAtom(globalClassAtom)\r\n\r\n    const [primary, setPrimary] = useAtom(primaryColorAtom)\r\n\r\n    const handleToday = () => {\r\n        let dateObj = Object.assign({}, selectedDate);\r\n        dateObj = moment(new Date());\r\n\r\n        setSelectedDate(dateObj)\r\n        setDateObject(dateObj)\r\n        \r\n        setShowMonthTable(false)\r\n        setShowCalendarTable(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n      if(onChange !== null){\r\n        onChange(selectedDate)\r\n      }\r\n    }, [selectedDate])\r\n\r\n    useEffect(() => {\r\n        if (change !== null) {\r\n            let dateObj = Object.assign({}, selectedDate);\r\n            dateObj = moment(change);\r\n\r\n            setSelectedDate(dateObj)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (reset) {\r\n            handleToday()\r\n            setReset(false)\r\n        }\r\n    }, [reset, setReset])\r\n\r\n    useEffect(() => {\r\n        setPrimary(primaryColor)\r\n    }, [primaryColor])\r\n\r\n    useEffect(() => {\r\n        if(globalClass){\r\n          setGlClass('_rec-custom')\r\n        }else{\r\n          setGlClass('')\r\n        }  \r\n    }, [globalClass])\r\n\r\n    return (\r\n        <div className={`${parentClass ? '_rec-parent-class' : ''} w-full`} >\r\n            <CalendarHeader />\r\n\r\n            <div className={`${glClass && glClass+'-body'} h-[290px]`} >\r\n                {showCalendarTable && <CalendarDate />}\r\n                {showMonthTable && <CalendarMonth />}\r\n                {!showCalendarTable && !showMonthTable ? <CalendarYear /> : \"\"}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAAA;AAAA;AAHA;AAUA;AACA;AA1EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;;;;;;;;;;;A","sourceRoot":""}